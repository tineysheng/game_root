//Generated By Solar Editor

import ActorTypeUtil from "@/ActorTypeUtil"
import ActorAbilityUtil from "@/ActorAbilityUtil"
import SelectUtil from "@/SelectUtil"
import {InitAbility} from "./init_actor/init_ability"
/**
	id = 自定义id
	class = 类别
	targetType = 目标类型
	 passive = 是否被动技能
	name = 名字
	describe = 提示说明
	icon = 图标
	range = 施放范围
	area = 影响区域
	manaCost = 魔法消耗
	hotKey = 快捷键
	maxCd = 冷却
	x = 按钮x
	y = 按钮y
	attribute = 属性附加
	#<%1%># = 配置代码
*/
export type data_type = {
	id?: string
	class?: string
	targetType?: string
	passive?: boolean
	name?: string
	describe?: string
	icon?: string
	range?: number
	area?: number
	manaCost?: number
	hotKey?: string
	maxCd?: number
	x?: number
	y?: number
	attribute?: any
    [key:string]: any
}

declare global {
    type t_actor_ability = data_type
}

export const data: data_type[] = [
	{
		"id":"寒冰天赋",
		"class":"技能",
		"targetType":"无目标",
		"passive":true,
		"name":"极寒之触",
		"describe":"|cff00ccff被动：攻击禁锢目标持续3秒，对目标单位造成攻击力*（20+英雄等级）伤害|n|n触发类型：攻击触发|n技能CD：15s|r",
		"icon":"ReplaceableTextures\\CommandButtons\\BTNDarkRitual.blp",
		"range":0,
		"area":0,
		"manaCost":0,
		"hotKey":"D",
		"maxCd":10,
		"x":2,
		"y":1
	},
	{
		"id":"寒冰Q",
		"class":"技能",
		"targetType":"点",
		"passive":false,
		"name":"万箭齐发",
		"describe":"|cff00ccff主动：向目标位置释放扇形箭矢20支，每支箭对路径敌人造成攻击力*10的伤害|n|n触发类型：主动选择目标点|n技能CD：10秒|r",
		"icon":"ReplaceableTextures\\CommandButtons\\BTNBlizzard.blp",
		"range":1000,
		"area":200,
		"manaCost":0,
		"hotKey":"Q",
		"maxCd":10,
		"x":0,
		"y":2
	},
	{
		"id":"寒冰W",
		"class":"技能",
		"targetType":"无目标",
		"passive":false,
		"name":"净化回血",
		"describe":"|cff00ccff主动：净化周围队友和自己，并且恢复攻击力*10的生命值|n注意：被眩晕也能释放，可以解除眩晕|n|n触发类型：主动无目标释放|n技能CD：10秒|r",
		"icon":"ReplaceableTextures\\CommandButtons\\BTNManaRecharge.blp",
		"range":0,
		"area":0,
		"manaCost":0,
		"hotKey":"W",
		"maxCd":10,
		"x":1,
		"y":2
	}
]
export const d_actor_ability = data;


//code
export default function(){

    for (let datum of data) {
        if (datum.id) {
            ActorTypeUtil.registerActorType(datum as any);
            ActorAbilityUtil.createActorAbility(datum.id, SelectUtil.getAnHero(0));
        }
    }
    new InitAbility()
}
